<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10000.16.0917.1429                               -->
<workbook source-build='10.0.1 (10000.16.0917.1429)' source-platform='win' version='10.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Bird Strikes (Bird Strikes_Final)' inline='true' name='federated.1s9zupv1uvx06c1b725vs0uttd1f' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Bird Strikes_Final' name='excel-direct.10ii2fp03ie49u12azr8h0x3k72e'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:\Hozefa\UNCC\SEM1\SPL\Project\airplane-crashes-since-1908\shihzy-2000-2011-birds-strikes-planes\shihzy-2000-2011-birds-strikes-planes\Bird Strikes_Final.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.10ii2fp03ie49u12azr8h0x3k72e' name='Bird Strikes' table='[&apos;Bird Strikes$&apos;]' type='table'>
          <columns gridOrigin='A1:Z10001:no:A1:Z10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='Record ID' ordinal='0' />
            <column datatype='string' name='Aircraft: Type' ordinal='1' />
            <column datatype='string' name='Airport: Name' ordinal='2' />
            <column datatype='string' name='Altitude bin' ordinal='3' />
            <column datatype='string' name='Aircraft: Make/Model' ordinal='4' />
            <column datatype='string' name='Wildlife: Number struck' ordinal='5' />
            <column datatype='integer' name='Wildlife: Number Struck Actual' ordinal='6' />
            <column datatype='string' name='Effect: Impact to flight' ordinal='7' />
            <column datatype='date' name='FlightDate' ordinal='8' />
            <column datatype='string' name='Effect: Indicated Damage' ordinal='9' />
            <column datatype='integer' name='Aircraft: Number of engines?' ordinal='10' />
            <column datatype='string' name='Aircraft: Airline/Operator' ordinal='11' />
            <column datatype='string' name='Origin State' ordinal='12' />
            <column datatype='string' name='When: Phase of flight' ordinal='13' />
            <column datatype='string' name='Conditions: Precipitation' ordinal='14' />
            <column datatype='boolean' name='Remains of wildlife collected?' ordinal='15' />
            <column datatype='boolean' name='Remains of wildlife sent to Smithsonian' ordinal='16' />
            <column datatype='string' name='Remarks' ordinal='17' />
            <column datatype='string' name='Wildlife: Size' ordinal='18' />
            <column datatype='string' name='Conditions: Sky' ordinal='19' />
            <column datatype='string' name='Wildlife: Species' ordinal='20' />
            <column datatype='string' name='Pilot warned of birds or wildlife?' ordinal='21' />
            <column datatype='integer' name='Cost: Total $' ordinal='22' />
            <column datatype='integer' name='Feet above ground' ordinal='23' />
            <column datatype='integer' name='Number of people injured' ordinal='24' />
            <column datatype='string' name='Is Aircraft Large?' ordinal='25' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Record ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Record ID]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Record ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aircraft: Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Aircraft: Type]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Aircraft: Type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airport: Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Airport: Name]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Airport: Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Altitude bin</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Altitude bin]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Altitude bin</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aircraft: Make/Model</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Aircraft: Make/Model]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Aircraft: Make/Model</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wildlife: Number struck</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Wildlife: Number struck]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Wildlife: Number struck</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wildlife: Number Struck Actual</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Wildlife: Number Struck Actual]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Wildlife: Number Struck Actual</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Effect: Impact to flight</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Effect: Impact to flight]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Effect: Impact to flight</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FlightDate</remote-name>
            <remote-type>7</remote-type>
            <local-name>[FlightDate]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>FlightDate</remote-alias>
            <ordinal>8</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Effect: Indicated Damage</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Effect: Indicated Damage]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Effect: Indicated Damage</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aircraft: Number of engines?</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Aircraft: Number of engines?]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Aircraft: Number of engines?</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aircraft: Airline/Operator</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Aircraft: Airline/Operator]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Aircraft: Airline/Operator</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Origin State]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Origin State</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>When: Phase of flight</remote-name>
            <remote-type>130</remote-type>
            <local-name>[When: Phase of flight]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>When: Phase of flight</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Conditions: Precipitation</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Conditions: Precipitation]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Conditions: Precipitation</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Remains of wildlife collected?</remote-name>
            <remote-type>11</remote-type>
            <local-name>[Remains of wildlife collected?]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Remains of wildlife collected?</remote-alias>
            <ordinal>15</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WINBOOL&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Remains of wildlife sent to Smithsonian</remote-name>
            <remote-type>11</remote-type>
            <local-name>[Remains of wildlife sent to Smithsonian]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Remains of wildlife sent to Smithsonian</remote-alias>
            <ordinal>16</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WINBOOL&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Remarks</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Remarks]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Remarks</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wildlife: Size</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Wildlife: Size]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Wildlife: Size</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Conditions: Sky</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Conditions: Sky]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Conditions: Sky</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wildlife: Species</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Wildlife: Species]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Wildlife: Species</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pilot warned of birds or wildlife?</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Pilot warned of birds or wildlife?]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Pilot warned of birds or wildlife?</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost: Total $</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cost: Total $]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Cost: Total $</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Feet above ground</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Feet above ground]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Feet above ground</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of people injured</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of people injured]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Number of people injured</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Is Aircraft Large?</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Is Aircraft Large?]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Is Aircraft Large?</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Z10001:no:A1:Z10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' hidden='true' name='[Aircraft: Make/Model]' role='dimension' type='nominal' />
      <column datatype='integer' hidden='true' name='[Aircraft: Number of engines?]' role='measure' type='quantitative' />
      <column datatype='string' hidden='true' name='[Aircraft: Type]' role='dimension' type='nominal' />
      <column datatype='string' name='[Airport: Name]' role='dimension' type='nominal' />
      <column caption='Index' datatype='integer' name='[Calculation_487796138582274048]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[Airport: Name]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Calculation1' datatype='real' name='[Calculation_533958034947403783]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(COUNT([Number of Records])/TOTAL(SUM([Number of Records])))*100'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' hidden='true' name='[Conditions: Precipitation]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[Conditions: Sky]' role='dimension' type='nominal' />
      <column datatype='string' name='[Effect: Impact to flight]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[Effect: Indicated Damage]' role='dimension' type='nominal' />
      <column caption='Flight Date' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' hidden='true' name='[Number of people injured]' role='measure' type='quantitative' />
      <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' hidden='true' name='[Record ID]' role='dimension' type='ordinal' />
      <column datatype='boolean' hidden='true' name='[Remains of wildlife collected?]' role='dimension' type='nominal' />
      <column datatype='boolean' hidden='true' name='[Remains of wildlife sent to Smithsonian]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[Remarks]' role='dimension' type='nominal' />
      <column datatype='integer' hidden='true' name='[Wildlife: Number Struck Actual]' role='measure' type='quantitative' />
      <column datatype='string' hidden='true' name='[Wildlife: Size]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[Wildlife: Species]' role='dimension' type='nominal' />
      <column-instance column='[Airport: Name]' derivation='None' name='[none:Airport: Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Effect: Impact to flight]' derivation='None' name='[none:Effect: Impact to flight:nk]' pivot='key' type='nominal' />
      <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
      <group name='[Airport: Name &amp; Effect: Impact to flight (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Airport: Name]' />
          <groupfilter function='level-members' level='[Effect: Impact to flight]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.587992' measure-ordering='alphabetic' measure-percentage='0.412008' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Origin State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saskatchewan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prince Edward Island&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alberta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;British Columbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Virgin Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;N/A&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Quebec&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Newfoundland and Labrador&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Airport: Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;AIRBORNE AIRPARK&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ANN ARBOR MUNICIPAL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BALDWIN COUNTY ARPT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CHARLESTON AFB/INTL ARPT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HARRISBURG INTL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ABERDEEN REGIONAL AR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ALTOONA-BLAIR COUNTY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ATLANTIC CITY INTL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BRACKETT FIELD ARPT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;FORT WAYNE INTL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ADAMS FIELD ARPT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ANDREWS AIR FORCE BASE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AUSTIN STRAUBEL INTL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CAPITAL CITY (MI)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GREATER PEORIA REGIONAL ARPT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ALBERT LEA MUNICIPAL ARPT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ARCATA AIRPORT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BATON ROUGE METRO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DENVER INTL AIRPORT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;STEWART INTL AIRPORT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AKRON-CANTON MUNICIPAL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ANNISTON METROPOLITAN ARPT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BALTIMORE WASH INTL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CHICAGO EXECUTIVE ARPT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HENDERSON FIELD&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ADDINGTON FIELD ARPT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ANIAK AIRPORT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AUSTIN-BERGSTROM INTL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CARRABELLE-THOMPSON&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GREATER PITTSBURGH&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ALLIANCE MUNICIPAL ARPT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ASPEN-PITKIN CO/SARD&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BOEING FIELD K C INT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FORT LAUDERDALE/HOLLYWOOD INTL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ABILENE REGIONAL ARPT&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AMARILLO INTL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AUBURN-LEWISTON MUNICIPAL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BRADLEY INTL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;FRANCIS S GABRESKI ARPT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ALLEGHENY COUNTY ARPT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ASHE COUNTY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BLUE GRASS ARPT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ERNEST A LOVE FIELD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ADDISON&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ANIMAS AIR PARK&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BAHRAIN INTL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CENTRAL NEBRASKA REGIONAL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GUAYAQUIL/S BOLIVAR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ALBERT WHITTED&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ARDMORE MUNICIPAL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BAUDETTE INTL ARPT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DETROIT METRO WAYNE COUNTY ARPT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;VAN NUYS ARPT&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ALBUQUERQUE INTL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ARLINGTON MUNICIPAL ARPT (TX)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BIRMINGHAM-SHUTTLESWORTH INTL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ELLINGTON FIELD ARPT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ALLENTOWN QUEEN CITY MUNICIPAL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ASHEVILLE REGIONAL ARPT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BOB HOPE ARPT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;EUGENIO MARIA DE HOSTOS ARPT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ALPENA COUNTY REG&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ATLANTA INTL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BOISE AIR TERMINAL/GOWEN FIELD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FORT SMITH MUNICIPAL ARPT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ALBANY INTL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ANOKA COUNTY-BLAINE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BANGOR INTL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CLEVELAND-HOPKINS INTL ARPT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LAGUARDIA NY&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ADIRONDAK REGIONAL ARPT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ANKENY REGIONAL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BAIYUN AIRPORT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CHARLES B WHEELER DOWNTOWN ARPT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HAGERSTOWN REGIONAL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ABRAHAM LINCOLN CAPITAL ARPT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AMSTERDAM SCHIPHOL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AUGUSTA STATE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BUFFALO-NIAGARA INTL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GENERAL MITCHELL INTL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ALEXANDRIA INTL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ARNOLD PALMER REGIONAL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BISMARCK MUNICIPAL ARPT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;EPPLEY AIRFIELD&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ALBERT J ELLIS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AQUASCALIENTES&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BARKSDALE AIR FORCE BASE ARPT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;COLUMBIA GORGE REGIONAL ARPT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SEATTLE-TACOMA INTL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ADAMS COUNTY- LEGION FIELD&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ANDERSON REGIONAL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AURORA MUNICIPAL ARPT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BURKE LAKEFRONT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GERALD R FORD INTL&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Effect: Impact to flight:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;None&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Engine Shut Down&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aborted Take-off&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Precautionary Landing&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Airline'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bird Strikes (Bird Strikes_Final)' name='federated.1s9zupv1uvx06c1b725vs0uttd1f' />
          </datasources>
          <datasource-dependencies datasource='federated.1s9zupv1uvx06c1b725vs0uttd1f'>
            <column datatype='string' name='[Aircraft: Airline/Operator]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cum:cnt:Number of Records:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='' ordering-type='Field' type='CumTotal' />
            </column-instance>
            <column-instance column='[Aircraft: Airline/Operator]' derivation='None' name='[none:Aircraft: Airline/Operator:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Aircraft: Airline/Operator:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot;ABSA AEROLINHAS BRASILEIRAS&quot;' function='range' level='[none:Aircraft: Airline/Operator:nk]' to='&quot;ZANTOP INTL AIRLINES&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Aircraft: Airline/Operator:nk]' direction='DESC' using='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' />
          <slices>
            <column>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Aircraft: Airline/Operator:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' scope='rows' value='Number of Strikes' />
            <format attr='subtitle' class='0' field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Aircraft: Airline/Operator:nk]' value='67' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cum:cnt:Number of Records:qk:1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]</rows>
        <cols>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Aircraft: Airline/Operator:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Altitude &amp; Impact'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bird Strikes (Bird Strikes_Final)' name='federated.1s9zupv1uvx06c1b725vs0uttd1f' />
          </datasources>
          <datasource-dependencies datasource='federated.1s9zupv1uvx06c1b725vs0uttd1f'>
            <column datatype='string' name='[Altitude bin]' role='dimension' type='nominal' />
            <column datatype='string' name='[Effect: Impact to flight]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Altitude bin]' derivation='None' name='[none:Altitude bin:nk]' pivot='key' type='nominal' />
            <column-instance column='[Effect: Impact to flight]' derivation='None' name='[none:Effect: Impact to flight:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[pcto:cnt:Number of Records:qk:7]' pivot='key' type='quantitative'>
              <table-calc ordering-type='RowInPane' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Altitude bin:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Altitude bin:nk]' member='&quot;&lt; 1000 ft&quot;' />
              <groupfilter function='member' level='[none:Altitude bin:nk]' member='&quot;&gt; 1000 ft&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Effect: Impact to flight:nk]' direction='DESC' using='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' />
          <slices>
            <column>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Altitude bin:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' scope='rows' value='Number of Strike' />
            <format attr='subtitle' class='0' field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Altitude bin:nk]' />
              <text column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' />
              <text column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[pcto:cnt:Number of Records:qk:7]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]</rows>
        <cols>([federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Altitude bin:nk] / [federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Effect: Impact to flight:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Avearge altitude at the time of strike'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bird Strikes (Bird Strikes_Final)' name='federated.1s9zupv1uvx06c1b725vs0uttd1f' />
          </datasources>
          <datasource-dependencies datasource='federated.1s9zupv1uvx06c1b725vs0uttd1f'>
            <column datatype='integer' name='[Feet above ground]' role='measure' type='quantitative' />
            <column datatype='string' name='[When: Phase of flight]' role='dimension' type='nominal' />
            <column-instance column='[Feet above ground]' derivation='Avg' name='[avg:Feet above ground:qk]' pivot='key' type='quantitative' />
            <column-instance column='[When: Phase of flight]' derivation='None' name='[none:When: Phase of flight:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[avg:Feet above ground:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>5933.9600515463917</max>
          </filter>
          <slices>
            <column>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[avg:Feet above ground:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[avg:Feet above ground:qk]</rows>
        <cols>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:When: Phase of flight:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Bird Strikes in US'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bird Strikes (Bird Strikes_Final)' name='federated.1s9zupv1uvx06c1b725vs0uttd1f' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1s9zupv1uvx06c1b725vs0uttd1f'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Origin State:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Origin State:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:Origin State:nk]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[none:Origin State:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:Origin State:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter from='&quot;California&quot;' function='range' level='[none:Origin State:nk]' to='&quot;Montana&quot;' />
              <groupfilter from='&quot;Nebraska&quot;' function='range' level='[none:Origin State:nk]' to='&quot;New York&quot;' />
              <groupfilter from='&quot;North Carolina&quot;' function='range' level='[none:Origin State:nk]' to='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:Origin State:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:Origin State:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:Origin State:nk]' member='&quot;Puerto Rico&quot;' />
              <groupfilter function='member' level='[none:Origin State:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter from='&quot;South Carolina&quot;' function='range' level='[none:Origin State:nk]' to='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Origin State:nk]' direction='DESC' using='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' />
          <slices>
            <column>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Origin State:nk]</column>
            <column>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[Latitude (generated)]</column>
            <column>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[Longitude (generated)]' field-type='quantitative' max='-7144179.2764614355' min='-13908486.163562575' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[Latitude (generated)]' field-type='quantitative' max='6785592.3745587254' min='2937929.3827484543' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Origin State:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Origin State:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Origin State:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Origin State:nk]' />
              <color column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' />
              <text column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' />
              <geometry column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[Latitude (generated)]</rows>
        <cols>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Effect of Strike'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bird Strikes (Bird Strikes_Final)' name='federated.1s9zupv1uvx06c1b725vs0uttd1f' />
          </datasources>
          <datasource-dependencies datasource='federated.1s9zupv1uvx06c1b725vs0uttd1f'>
            <column datatype='string' name='[Effect: Impact to flight]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Effect: Impact to flight]' derivation='None' name='[none:Effect: Impact to flight:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[pcto:cnt:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Effect: Impact to flight:nk]'>
            <groupfilter from='&quot;Aborted Take-off&quot;' function='range' level='[none:Effect: Impact to flight:nk]' to='&quot;Precautionary Landing&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Effect: Impact to flight:nk]' direction='DESC' using='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' />
          <slices>
            <column>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Effect: Impact to flight:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' scope='rows' value='Number of Strikes' />
            <format attr='subtitle' class='0' field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Effect: Impact to flight:nk]' value='72' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[pcto:cnt:Number of Records:qk]' />
              <text column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]</rows>
        <cols>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Effect: Impact to flight:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Height of Strike'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bird Strikes (Bird Strikes_Final)' name='federated.1s9zupv1uvx06c1b725vs0uttd1f' />
          </datasources>
          <datasource-dependencies datasource='federated.1s9zupv1uvx06c1b725vs0uttd1f'>
            <column datatype='string' name='[Altitude bin]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Altitude bin]' derivation='None' name='[none:Altitude bin:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[pcto:cnt:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Altitude bin:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Altitude bin:nk]' member='&quot;&lt; 1000 ft&quot;' />
              <groupfilter function='member' level='[none:Altitude bin:nk]' member='&quot;&gt; 1000 ft&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Altitude bin:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Altitude bin:nk]' />
              <wedge-size column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' />
              <size column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' />
              <text column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Altitude bin:nk]' />
              <text column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' />
              <text column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[pcto:cnt:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Pilot Warned vs Effect '>
      <table>
        <view>
          <datasources>
            <datasource caption='Bird Strikes (Bird Strikes_Final)' name='federated.1s9zupv1uvx06c1b725vs0uttd1f' />
          </datasources>
          <datasource-dependencies datasource='federated.1s9zupv1uvx06c1b725vs0uttd1f'>
            <column datatype='string' name='[Effect: Impact to flight]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Pilot warned of birds or wildlife?]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Effect: Impact to flight]' derivation='None' name='[none:Effect: Impact to flight:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pilot warned of birds or wildlife?]' derivation='None' name='[none:Pilot warned of birds or wildlife?:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[pcto:cnt:Number of Records:qk:7]' pivot='key' type='quantitative'>
              <table-calc ordering-type='RowInPane' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <sort class='computed' column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Effect: Impact to flight:nk]' direction='DESC' using='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' />
          <filter class='categorical' column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Pilot warned of birds or wildlife?:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Pilot warned of birds or wildlife?:nk]' member='&quot;N&quot;' />
              <groupfilter function='member' level='[none:Pilot warned of birds or wildlife?:nk]' member='&quot;Y&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Pilot warned of birds or wildlife?:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' scope='rows' value='Number of Strikes' />
            <format attr='subtitle' class='0' field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Effect: Impact to flight:nk]' />
              <text column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' />
              <text column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[pcto:cnt:Number of Records:qk:7]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]</rows>
        <cols>([federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Pilot warned of birds or wildlife?:nk] / [federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Effect: Impact to flight:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Top 5 Airports Analysis'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bird Strikes (Bird Strikes_Final)' name='federated.1s9zupv1uvx06c1b725vs0uttd1f' />
          </datasources>
          <datasource-dependencies datasource='federated.1s9zupv1uvx06c1b725vs0uttd1f'>
            <column datatype='string' name='[Airport: Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Effect: Impact to flight]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Airport: Name]' derivation='None' name='[none:Airport: Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Effect: Impact to flight]' derivation='None' name='[none:Effect: Impact to flight:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[Airport: Name &amp; Effect: Impact to flight (Combined)]' direction='DESC' using='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' />
          <filter class='categorical' column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Airport: Name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot;ABERDEEN REGIONAL AR&quot;' function='range' level='[none:Airport: Name:nk]' to='&quot;ZURICH&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Effect: Impact to flight:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Effect: Impact to flight:nk]' member='&quot;Aborted Take-off&quot;' />
              <groupfilter function='member' level='[none:Effect: Impact to flight:nk]' member='&quot;Engine Shut Down&quot;' />
              <groupfilter function='member' level='[none:Effect: Impact to flight:nk]' member='&quot;Other&quot;' />
              <groupfilter function='member' level='[none:Effect: Impact to flight:nk]' member='&quot;Precautionary Landing&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Airport: Name:nk]</column>
            <column>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Effect: Impact to flight:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' scope='rows' value='Number of Strikes' />
            <format attr='subtitle' class='0' field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Airport: Name:nk]' value='81' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[Airport: Name &amp; Effect: Impact to flight (Combined)]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[Airport: Name &amp; Effect: Impact to flight (Combined)]' />
              <color column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Effect: Impact to flight:nk]' />
              <text column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Airport: Name:&#9;</run>
                <run bold='true'>&lt;[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Airport: Name:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Effect: Impact to flight:&#9;</run>
                <run bold='true'>&lt;[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Effect: Impact to flight:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Count of Number of Records:&#9;</run>
                <run bold='true'>&lt;[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;% of Total Count of Number of Records along Airport: Name, Effect: Impact to flight:&#9;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]</rows>
        <cols>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Airport: Name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Top 50 Airports'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bird Strikes (Bird Strikes_Final)' name='federated.1s9zupv1uvx06c1b725vs0uttd1f' />
          </datasources>
          <datasource-dependencies datasource='federated.1s9zupv1uvx06c1b725vs0uttd1f'>
            <column datatype='string' name='[Airport: Name]' role='dimension' type='nominal' />
            <column caption='Index' datatype='integer' name='[Calculation_487796138582274048]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[Airport: Name]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Airport: Name]' derivation='None' name='[none:Airport: Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_487796138582274048]' derivation='User' name='[usr:Calculation_487796138582274048:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[Airport: Name]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' included-values='all' />
          <filter class='categorical' column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Airport: Name:nk]'>
            <groupfilter from='&quot;ABERDEEN REGIONAL AR&quot;' function='range' level='[none:Airport: Name:nk]' to='&quot;ZURICH&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Airport: Name:nk]' direction='DESC' using='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' />
          <filter class='quantitative' column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[usr:Calculation_487796138582274048:qk]' included-values='in-range'>
            <min>1</min>
            <max>50</max>
          </filter>
          <slices>
            <column>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Airport: Name:nk]</column>
            <column>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]</column>
            <column>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[usr:Calculation_487796138582274048:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' scope='rows' value='Number of Strikes' />
            <format attr='subtitle' class='0' field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]</rows>
        <cols>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Airport: Name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Were Pilots Informed?'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bird Strikes (Bird Strikes_Final)' name='federated.1s9zupv1uvx06c1b725vs0uttd1f' />
          </datasources>
          <datasource-dependencies datasource='federated.1s9zupv1uvx06c1b725vs0uttd1f'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Pilot warned of birds or wildlife?]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pilot warned of birds or wildlife?]' derivation='None' name='[none:Pilot warned of birds or wildlife?:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[pcto:cnt:Number of Records:qk:11]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Table' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Pilot warned of birds or wildlife?:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Pilot warned of birds or wildlife?:nk]' member='&quot;N&quot;' />
              <groupfilter function='member' level='[none:Pilot warned of birds or wildlife?:nk]' member='&quot;Y&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Pilot warned of birds or wildlife?:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Pilot warned of birds or wildlife?:nk]' />
              <wedge-size column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' />
              <text column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Pilot warned of birds or wildlife?:nk]' />
              <text column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[pcto:cnt:Number of Records:qk:11]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='When?'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bird Strikes (Bird Strikes_Final)' name='federated.1s9zupv1uvx06c1b725vs0uttd1f' />
          </datasources>
          <datasource-dependencies datasource='federated.1s9zupv1uvx06c1b725vs0uttd1f'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[When: Phase of flight]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[When: Phase of flight]' derivation='None' name='[none:When: Phase of flight:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[pcto:cnt:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:When: Phase of flight:nk]'>
            <groupfilter from='&quot;Approach&quot;' function='range' level='[none:When: Phase of flight:nk]' to='&quot;Taxi&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:When: Phase of flight:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:When: Phase of flight:nk]' />
              <wedge-size column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' />
              <size column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' />
              <text column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:When: Phase of flight:nk]' />
              <text column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' />
              <text column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[pcto:cnt:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Yearly Analysis'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bird Strikes (Bird Strikes_Final)' name='federated.1s9zupv1uvx06c1b725vs0uttd1f' />
          </datasources>
          <datasource-dependencies datasource='federated.1s9zupv1uvx06c1b725vs0uttd1f'>
            <column caption='Flight Date' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FlightDate]' derivation='Year' name='[yr:FlightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[yr:FlightDate:ok]'>
            <groupfilter from='2000' function='range' level='[yr:FlightDate:ok]' to='2011' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[yr:FlightDate:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' scope='rows' value='Number of Strikes' />
            <format attr='subtitle' class='0' field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]</rows>
        <cols>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[yr:FlightDate:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Yearly Cost'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bird Strikes (Bird Strikes_Final)' name='federated.1s9zupv1uvx06c1b725vs0uttd1f' />
          </datasources>
          <datasource-dependencies datasource='federated.1s9zupv1uvx06c1b725vs0uttd1f'>
            <column datatype='integer' name='[Cost: Total $]' role='measure' type='quantitative' />
            <column caption='Flight Date' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column-instance column='[Cost: Total $]' derivation='Sum' name='[sum:Cost: Total $:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FlightDate]' derivation='Year' name='[yr:FlightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[yr:FlightDate:ok]'>
            <groupfilter from='2000' function='range' level='[yr:FlightDate:ok]' to='2011' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[yr:FlightDate:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[sum:Cost: Total $:qk]</rows>
        <cols>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[yr:FlightDate:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Top 50 Airports'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[usr:Calculation_487796138582274048:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Aircraft: Airline/Operator:nk]</field>
            <field>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Airport: Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Height of Strike'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Altitude bin:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Yearly Analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[yr:FlightDate:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[yr:FlightDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='When?'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:When: Phase of flight:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Avearge altitude at the time of strike'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[avg:Feet above ground:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:When: Phase of flight:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Effect of Strike'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Effect: Impact to flight:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Altitude &amp; Impact'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Altitude bin:nk]</field>
            <field>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Effect: Impact to flight:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Bird Strikes in US'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[cnt:Number of Records:qk]</field>
            <field>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Origin State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Top 5 Airports Analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Effect: Impact to flight:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[Airport: Name &amp; Effect: Impact to flight (Combined)]</field>
            <field>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Airport: Name:nk]</field>
            <field>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Effect: Impact to flight:nk]</field>
            <field>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[pcva:cnt:Number of Records:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Were Pilots Informed?'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Pilot warned of birds or wildlife?:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Pilot warned of birds or wildlife?:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Pilot Warned vs Effect '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Effect: Impact to flight:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Effect: Impact to flight:nk]</field>
            <field>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Pilot warned of birds or wildlife?:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Yearly Cost'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[yr:FlightDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Airline'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s9zupv1uvx06c1b725vs0uttd1f].[none:Aircraft: Airline/Operator:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Airline' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Altitude &amp; Impact' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Avearge altitude at the time of strike' width='192'>
      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
      TJqW+AAADk8JN26afGBIcloWyec2Ck0Wckrmk3PlSxPXODkWSBiaBEAYmgRAGJoEQBiaBEAY
      mgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAYmgRAGJoE
      QBiaBEAYmgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAY
      mgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAYmgRAGJo50QUA6FoMTT/3l4Kq
      Kh8/qCig62d/FAUUBeVijQjxJUyDAER5/xc/YE9/ElaA1AU8+vVbUHvb6BoyU7GoFNNEP4f2
      7cM+bzOL8h2JLlhcQ6ZBAIYIW2/kW3+xCe/5aTF6z/2qB+moOcx4xnKW5jtk7S/iKvFjgOgw
      o84s0i/6oI6/7TA1Y16WL8w/20MIEUeJ7wH847Qd28GPmndhSc5m6brNrJ7tgdAAVW/t5jVz
      CXd+7R7SPlFpKBRC188PGtB1nYmJiQQULz5LJBJOdAmTaJp2wXKS+AAkL+Y7zywEPUZwqJVd
      r71PU8EW0m0eFm+4j42cZN/xDsrWzMZhPrsBZLVO7guCwSAOh4wNphuLxZLoEiZRVRWn0zlp
      WsIDEBrqol9Nx5viwJ6STU5qNf6QTjoKimoma8F65u3axYcNaaycm41NAUW5cCRwsWki0abf
      Z/L7y0nCA6CFRqg7WsXBQJiYpqG4SlnvthD2ffQE1UXF6uXsf/cIDSmrmV/gngYDF3GtSHgA
      HN7ZLMdF/3gQ3eTAk51NqtlCJLsAZ7qCFVCcOSxeZSFksk3DdYq4miU8ACgW0nJnkPZ7k632
      JKz2j/5QTbjSsnBd6drENU+2JoShSQCEoUkAhKFJAIShSQCEoUkAhKFJAIShSQCEoUkAhKFJ
      AIShSQCEoUkAhKFJAIShSQCEoUkAhKFJAIShSQCEoUkAhKFJAIShSQCEoUkAhKFJAIShSQCE
      oUkAhKFJAIShSQCEoUkAhKFJAIShSQCEoUkAhKFJAIShTeH+ADHCgRDhaAz9gscUzFYbNptF
      EiamtSkEoJc9//xjXjh8itAFj7lZvOlhvv6HN+CZQnFCXG5TCICXjX/yNBv0GGdq9lF5ZII1
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Bird Strikes in US' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Effect of Strike' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Height of Strike' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Pilot Warned vs Effect ' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 5 Airports Analysis' width='192'>
      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
      4f8Hy8Q6s0zNhQsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 50 Airports' width='192'>
      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
      30FbxHwNWJ6QAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Were Pilots Informed?' width='192'>
      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
      ACQaAyDR/guabL3ljgzWNgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='When?' width='192'>
      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
      Kr6GuXwTmqcXtfMgatchNE8v6DPPEeQeQKTEmKubiYBOzdKl2E1xerp6ceSXkWUK4fZGWVZb
      zYSrj6g1l6J0jQG3h8qaahTFhMOiEdPS8I8PoDmKKCvImtM1dV2HWJDE+DUSvceI9x6XAAhj
      +qzaSxdIGJLym5mlEgBxf4hM8cbet3G7hijf8CgJVxcjIwNUbnuRgtFmro1F+L1v/xEVOQs7
      fU26QOL+oetcPn2Y4voncGabaT5xlKr6dXz01ttUrVzP5q2bybAubABkNqi4b+gJH+6Ag7Ic
      K9HpcfxKDgUZVjJzCnAWJDj8yacLfk0JgLhvuFquUv/owyjAaH8vKxoasNiyKM83c+xUK0tW
      Vi/4NaULJAxNWgBhaBIAYWgyDCpSJuRz8fYb7+OLKez+4z+l2KbTcnw/Ry/30vDkbtIGj3C6
      O8iWRx5l8EojatEqHq/NRC9dRdUs267Oh7QAImXSc8rYumUTFaWFwMycTVfUxl/9zV8SGryC
      zxdn/cZNrFmShyXXiSnqYWhymgm3e5YVfuZHAiBSSCE9M4fCLAtToZlXGj/fLtXExse2U2RX
      +fhsN09sXkuts5TJqUk8PefpvsX6t3dLAiBSZnqokwOHj3B1YBx7zEv30ARLs3R+8IMfkrd0
      LR2fXuL02UsUlZRTUJCFkl7EkqJ0utxhChZoTz0ZBhWGJi2AMDQJgDA0CYAwNAmAMDQJgDA0
      CYAwNAmAMDQJgDA0CYAwNAmAMDQJgDA0CYAwNAmAMDQJgDA0CYAwNAmAMDQJgDA0CYAwNAmA
      MDQJgDA0CYAwNAmAMDQJgDA0CYAwNAmAMDQJgDA0CYAwNAmAMDQJgDA0CYAwNAmAMDQJgDA0
      CYAwNAmAMLT/ArpULUWabLlPAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Yearly Analysis' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO3deXAcV4Lf+W/d9wlU4b4vguAlkRQvUSTV6pE0061Wd4/ac3gm3LP22P5j
      1+uNiVh7HbGhP3YjHOv1ho/xjMMzYbfXO9PTbrW6p9WtbpGiKEo8BN4kAALEVTirgEJVoe4j
      Kytz/4AAiZJIAgRAkKz3+UdNdFW+rKr8Zb738r2XGlVVVQShTGm3egcEYSuJAAhlTQRAKGsi
      AEJZEwEQHluJhVkGBgaYDS8Si8RQvvgCRSISTX7pfaViluGBAcYmQ19+zxeIAAiPrZsfvUMw
      BSgFTv/yAyJzowQWsp+9ID/Pu6eurfzzl796B4BMfJyz5waZunmaU5cn7trm8muW6Tdr5wVh
      vUrFAmPDt/F59wMQn7pJyG7jk1/+NcViiequLsJTt/mLPx1g+/59nPm4l+ee/w1MaPDVNnP0
      Nxr5f394ho9CF7nQN8GRV36Tcx+ewVZZT6z/E0bnU+IKIDy+DFYHL7/2BnvaqgBQlRJSepG8
      o5GXDm1HlhT8jdt5YXcHem8zOzqbqLQbV94fnbiD2eFiZKFIS5WNvMFHV3c3R3fUcieY5fDz
      R9C9+eabb27R5xOE+1IVBVdlLRY9qGjwVVdiq2xCM9fPhWtDVLbvpKXGT5XfhcXtxaUrYnDV
      YjVquHP9CuGSm1e/fphSYg6Du46WlmZqTAUGo3r2t7sJhBJoxJ1g4YmiFOm/eomobOHgc89g
      0mnWtbktDYCiKGi1ohYmbJ0tPfpKpdJWFi8IohEslDcRAKGsiQAIZU0EQChrIgBCWRMBEMqa
      CIBQ1kQAhLImAiCUNREAoayJAAhlTQRAKGsiAEJZEwEQypoIgFDWRACEsiYCIJQ1EQChrK17
      XSCllOfW5SukNXb2P9vDxOANkqqLZ3e0MNx3nazey57uJgZvXKFoqWJXdws6zfomMgvCRln3
      pHhVKZIvKMwNXaFQ2YSSAw/zxBQ3Wqsda36OUlFDztWIIT6Jr6Ubj21p7ZZisYjBYNiQDyII
      D2PdVwCNVkd4op+plJaW2hIajRunOc/EaJ7mKj96o4PQcJTKNhvaghVJkSkWl64ApVIJsSqL
      sJXWHYBSJkFaY6XSnCCZNZKaHyIkF2jq6CAwMoyuVKC1s57B633oVIk99a0YDLqV94srgLCV
      1h0ArdmO35OnVOHHX+km4zEgYabCbcNu1CNrrXhcVnYbzSh6O1aT7sEbFYRHZEsXxhJtAGGr
      iW5QoayJAAhlTQRAKGsiAEJZEwEQypoIgFDWRACEsiYCIJQ1EQChrIkACGVNBEAoayIAQlkT
      ARDKmgiAUNZEAISyJgIglDURAKGsiQAIZU0EQChr6w6AqqrMT48xMDxBSZGZGL7Nrb5+skWV
      0OQogWAEFZVg4A6ToShiERThcbL+leGULNmCAac0S2DeyWIOOpoaUOKzzKYUzNIoweIiM2kD
      +sgYHrcLp2XdxQrChlj3kajTWfH7sgSmPDTbNUwNTNKfy9FQ5aW+rha9ZCB4J0LjgT1oZ0pk
      ZQlLcek6IBbGErbaupdFKckZhu7M0rmtHbWYIVPQkZvvJ5x3obXZseZCGEwWYlo/xtQkdZ27
      cVuXlkIRy6IIW239jeBSkfhCkPMff0Qsp2Uu0E9IqmDXzg4c0gIFax2N7dtx5qfQuetxieqP
      8BgRC2MJZU10gwplTQRAKGsiAELZkmV5/d2ggvAkURSFSCSCRqNBVVURAKE8ZDIZgsEgjY2N
      ALjdbgwGg+gFEp5Oy4f17OwsWq0Wh8OByWRaOug/94w60QYQnhrJ2Bwnz15iPhJjeHiYfCbJ
      dGAKb1UNmnyMd999l0t9AZILk7z33gckCiURAOHJp6oqpVKJ4b5+mL3EUAza2tqIhWbIpWIk
      ihqCd27g795Pe4OHCxdu0tHZwNkz50UbQHhySZKEVqtldHQUj8fDtr376S0a2dPkRK/XU9fR
      Q3pxAYB0Osel/l8gHzhOhVXh5MmzJHU20QYQniyqqiJJEouLi6RSKVpaWtBoNOh0OsavXaBm
      5wEsn3sI451LH+LedRxpbgJ/TQU/eutXfO8734TcPG+dHRUBEB5/pVKJVCqFzWZjZGQEn89H
      ZWUlwF0N2qunf0bvnSAHjx1nJpRgmzPL+1fuYKlq45vPNfLOe70c/eZ30If7eO/KLK9/51UR
      AOHxlU6nyeVyaDQaCoUC1dXV6HQPfsqoXEhTUC3YzHe/VlVVotEo4+PjhMNhjh07JgIgPF4k
      SSIUCuH3+wmHw1RXV2MymR56e4qikM1mUVWVy5cvI0kSra2t1Dc0cHtyUQRAeDzMzMygqiou
      lwuNRoPD4VjX9vL5PLOzs4yPj1MoFNi3bx8ulwuz2YxGo2FsNsaf/Nmp1QRAJV+QkNJxFLMH
      t824rh37PBGA8qSqKqqqkkwmmZ2dpaWlBUVRsFgsq6ri3IuiKMzPz5PJZJAkiUQiQVtbGx6P
      B71ej0ajQS4pnL0xwQ9P95PIFFYTgDg/+auzpLNj6Dz7+Lu//cJD7+AXiQCUl0KhgFarZWJi
      AqPRSH19/boOePgsTBMTE4yMjKDX6+nq6qK+vv5LrwuE4vzXX99kPLjINw538vrRrtXcB7Bh
      N6WobD4Ies+6dlYoP4qiEI/H0Wg0xGIx6urqaGtrQ6td3z3YUqlEMBhkdHSUuro6APbt24fX
      672rZwigIMm8/dEgv7g4QldjBf/H3z9BY9VSVWsVAdBRW+tHsrsxWtZXLxPKgyzLxGIxbDYb
      oVCIyspKXC4Xbrf7SwfnWrdbKBRYWFjgxo0beDweOjs779k7VFIUbo7O84Nf3aBQLPHH33yW
      Izsb0es+C98qApDmRv8o/jo9qUKEnR31D36LUJbm5+fJ5XIrffRms5n29vZ1bXO5rTAxMcHM
      zAwej4fdu3fz8ssvY7FY7vm+SCLLjz4Y4NytSY7ubuJ3XtyB13n361Op1CoCoNro6qjl0s3b
      7P36t75yB2WpQFHRYDEbkaUCJXSYTXqkQgFFo8Nk1FMs5FE1BoxGPQ9/DhAeF8vjbwqFAlNT
      U9TW1mK1WqmoqECv12O329e1bUmSCAaD2Gw2rl69Sl1dHUePHsVut9+3+lSUS3x0c5Ifnu7H
      bjHyL/7gBbqbK9FptSvthcnJScxmMzabbRUB0EjEUzq6uxrIZjJf+r+VUpZbV/vI5xPU9uxn
      dugWsqzS88wObvcPoqoadu9s5/qNEVSdjkOHDmE1ijF4T6pCoYCqqszNzaEoCk1NTWzbtm1d
      VZtlqqqu1OsTiQTV1dXU1NTwyiuvrGr70WSWP337MqOzMV470sk3DnViMRkolUrEYjHC4TCt
      ra34/X5sNhvwgFUhcskgv/zb00RiUwxMSLz+u7/L157b9qWdVksFhvsHsVR70cguvKYF+sYl
      mjoaMRTChMaiVOzdg3Z2Am1VPV7zUs9PqVRad2NI2HylUolIJILdbmdubo7a2lpMJtOG/Xbx
      eJyRkRG8Xi+5XA6Px4PP58NoXH2X+9B0jP/87g0cFgN/+PIuGv1OVFVleHgYj8ez0hX6xX2+
      bwBUVSGfy6OqCooKOoMRi+nunVJKEkO379DUtR0lPUdwUUeFdp7ZjBWr14MlP08uVUSpaccQ
      ncDT2IHburQNWZbR68WA1MdRqVQiHA5jtVpJJpO43e5135xatlzFiUajXL9+Ha1WS0dHB01N
      TWvuFo8mc/z1+31c6JvmpX0t/O6JbjKZNJFIhPb29gdu7wH3AYoMDwwyfucO0ZxEXdc+ju/r
      uusVci7CmTPXMFiNbNu9j4WxW6RVJ/ueaWfg2jUKBjfP7mzj1uVLlKw+nt3ZhV67dDkT9wEe
      L8tVm2QySUtLC5lMBpfLtWFn+uX2wvj4ODabjR07dgCs3P1di6UbWpP86IN+zEYd332+na66
      pWHQFRUVq97eKm6EZTn1q16Off0F9FotWu3GNWFFALZWqVQin8+j1WoJBAJUVVXhdDrR6XQb
      ctCrqkqxWCQWi2EymTh79iw1NTUrd2e1Wu2aD3xVVZkOJ/nLX1xlcGyW14/vpKdaT1tLE3a7
      fc3bW0UAcvzsL/8LC3onHT37Ob6/6/4vXwMRgEdPURQWFxfR6XRkMhlkWaapqWnDy4lEIiuj
      Lu12O8899xxGo3FdVd5svsjbZ27wtx8P0lnv4Y1jXezqbl9XWB+wNyolOY+v8yi/dbCey5dn
      H7ogYWssn9+SySTBYJC2tjYkSaKiogK3272h5eRyOcbGxnA6nUSjUdxuNz09PVit1nXfALt4
      bZCfXJwkHF7gj18/wrFn2jAa1jeMAlbRBrjw6x/zs/eH2dZdT/u+r/HC7pZ1F7qydXEF2DT5
      fH5pltT4OG63G5vNtu7BZl+kqurKXd9bt26RzWZpbm6mra1tXfcBls2G5lhMZnnn4ihXhuc5
      sa+LP3h5Fy6beQP2fsn9A6CqyCWJTEpCUSUcbu9KA3YjiABsrEKhQC6XI5fLkclkVkZZbvR3
      rCgKc3NzjIyMANDT04OiKHi93nX36uXzeaanp1nI6fmzt86BwUKFy873X93DzjY/ug3uNr/v
      3qYjE1wYjNOqn+bkYJTq5mf4ztf2bOgOCA9PVVXy+TzhcJiqqipmZmaora29q1dlo874siwv
      DR3Q6/nggw9wOBx3jcNZ742wUGiOcCzJXKrEpaE5+iei5GUDLT47/+fffxGbZeOG4X/efa8A
      6YVxfvruReIpiT/6/sv8+nSA7752ZMMKf5qvAKpaYma4H2NtD1WOpfOMlIlx7nwvbc8cxSGF
      uDQww6EXjmIqLDIyn2FnZ/MDt6soCqqqrnQl2mw29Hr9uuvZ95JMJpmammJychK9Xs+RI0fQ
      arVYLJZ1l5dOpxkcCRDN6/nw2hjBeBGdVsvu9ir2dtYQjmfZ3VZFW51nUz4brOJG2GIkDCYn
      dn2RpGSg0m3dsMKf5gDkkguMXnqfSPPrnGi3gFri/Z/9GP/Og9RX2vjw5Hl27mhkOCzT4lYZ
      j+T4xkvHv3JbkiQhSRLZbJZoNEpbWxuqqmI0Gjf8wFi+STUzM4PFYmFqagqz2UxLSwsOh2Nd
      PS6qqqIoKkMj49wYDTEalhiaimI0Gnmms5rDPQ1sa6zEbjWi3aQD/ovuWwXKJRdIFmTyCxG8
      2xup3Lhj/6lncfrY2d3Kh/lP/1AqMh2ZZ+KDU2QOn8BnyfGrM73sP/abbO+pJ3zuk7ven8vl
      iEQiVFVVMTk5SWVlJX6/H7/fvyn7uzxuf2BggMXFRXw+H11dXRw8eHD921ZVZueinOm9xeiC
      zOBkBI/LwY5WP//L73TT0+LDavryibCYT3H5g19i3flN9jTYQFUZunyGj26Ms//EN9DNXebD
      mzPsP/4q+rmb9IfzvPHG97AbVh+e+wZAq4GLp97iys0IXdsbaew5zCtHdqz9GxBAq6e2upmD
      L32Nd3/yI3SWOv7o947yzsdDHOr5bIj5yMgIJpMJr9eLy+VCr9fT0dGxabsVj8cZHh4mnU7T
      09NDU1MT+/fvx2xef09LIpPn1MdXOd83TTirQ6vTcrCngdeP7aS9zovDev8rmFZnoKe9lut5
      5dO/KNyZWuR3f+81znx0hwqDnj/6x/8Yu04h11pNVSJCJKtgd62+3fPAXiCVIiP9QyQlhfbu
      7SvjeDbC01wFSkcmeOu/v0vWYGHftiZy3k72Vav87Bcf8Pw3voduoY93PhrgxVdfof/UjxkK
      pXj2xOt8/cA2dA9xh3S1VFUlnU6j1Wo5e/YsqqqujMNZb5WqpCjMR9NcH57h1LlrTC4q+Lwu
      nu2q42BPPTta/Oi0mrWVEbrKh+lOjnc4UFWF3tM/p28sTOueQ7gzY/QOztKw6wiH6xR+1jvD
      t177TSptq++JWsWd4Ax/819+RvfOOobnLbzxWwdWv/MP8DQH4POymRQGsx2Dbml9m2AwSFVV
      FeFwGKfTidfr3fR9WK7Xj46OUiwWef755wE2pF4/v5jh6p0QZ3tvMjwVwVdVzb7ueg5sr6ej
      zvvQPTi5ZIiTf/0DrhYb+R++8yIljYGBj39ORrWgsVXSaCsyGYpiq27GJsWYTKq8cOJl2vz3
      nijzRasIQIFb14eo8jmZS2vZvW3jbps/7QGQZZloNIrdbken01EoFOgdChFcSPHaCz14HOvv
      Sfkqy2Nw5ubmiEQiVFdXk8vlSKVS1NXV4fF41tx1qaoqJUUlnZPoD4Q5c20ci65EWtKQzWbp
      bvJhs1nZ2VZNc7Ubs1G/7s+mlIokEykUNJDPkDU6qXYaSWXy2J1OKOZJ54o4nA6K+QwFWcXl
      dLKWYlcRgCKRhSyVPte6PsxXbvkpC8BSL8fSTaJCoYDf7yeXy+H1etHpdEQTWf7kz04RS+Vo
      rfXwbGcN2xoraPC78Ltt6x5oWCqVSKfTJBIJbt68icvloq2tjaqqqoe6QaWqKoupPJPzcW5P
      LDA4GWFkMgRoSCbi1Pg8/PO/9xu01Xk3dJDko7SKAEi89/Y7bD/6Il67FZvl4Vfp+qKnIQCK
      opDJZFBVlZmZGRoaGtDr9V+aMJKXZP7DTy9zZShIW52HlhoPY7MxAnNx9DotXoeFzgYv25t9
      bGuspNJlRa97cFtguU4/Pj7OxMQEHo+HAwcOoCjKyiJQq6GqS9sqFGXGgov0jc3TH1hgNpIk
      my9SadOwr7uRpgoju7rbSOZknFYjPrdtXd/fVltFAPKcf+8M0UKRqpadHNgpxgIVi0UWFhaw
      2+1Eo1GsVitVVVX3fH0ineff/qSXYCTFn/zOYdpqP7uxk5dkAqE4d6YiDE1FmJxPEElkcVpN
      dDZU0NVQwbbGSvweG267Ga126dlWy4/8qayspLe3l/r6elpbW1em+q2Goqok0nlmF1Lcnlyg
      PxBmZDqGXq+ltsJBY6WFXW1VVFrBX+mhoqJi3d/d42YVAShx8q0foPP1oDc5OXZw+4YV/qQE
      YLlqMzs7Sz6fp7GxkWw2i8vleuBQg1gqx7/+m4vE03n+2e8focF/76qkqkK2ILEQzzIeXGRw
      coGRmRgzC0mcVhM1FQ6avFr0hUUseoW25gZ27dqF0WhcdUNWKpYYm40xMLF0wE+HkyQzBZqq
      XfQ0+9jR6seqLdJY6yMaWaCmpuYea3NKfPzO22R8O3nlYA8A2fkhfvCTM7Q98wL1miDnbgbo
      fu4lqpVpzl65TUXHPr7z4v5V7eejsoqKYYZIrIAuN43GWbv5e/SYKBQKpNNpzGYzk5OT1NbW
      UldXtzKJ40H95KoKc7EU//KvzmMy6njz+8fxPeAuukYDNrMRW7WR5mo3J55pRioWmZ6d59S5
      q8SyCfpGMkRSRUp6G/5ghO3BPrY1VtJR78XrsGA1G5BLCiqg12pJ5yTmYmn6A2H6A2HuTEXR
      ajVUuqzsaPHx6oF2upt8aJFBVYnFYlitdhx2Gw77/a4mBg4dO865kejKXz46d4sTr7yMr6KK
      S2duc+zFF7ly4zqHv/0t6jt2cO7K4Bp+gUdjFQFwcvjIM5y9MsGLzz/dA+GKxSKzs7M4nU4K
      hQJ6vR6bzcb27Wu76i0vw/evf3QRn9vKP/ntA3gcq++aWx7ktri4yPXr1zEajXz90A7q6uow
      m80kswWmw0nGZpeuEj8+M8BCIovfbaPR7yKVl1AUFavZwORcnGSmQGOVi876Cr6+r5Xmag9V
      HhsaDcRiMYw6lWBwnpqampWnKD6YBr3+7qufrJGZHR/lk96rvPbiIW723yGRzJGNTnF5cIHD
      Rw+v4Vt8NFY1JfL/+/P/ir3Sjlq5m2+f2LVhhW9lFWh5LPvyPNh0Ok1nZyeFQgGLxfLQfeOq
      qjIyE+Nf/tU5Ohsq+B+/89yq+sFVVb1rzqxer+fw4cPIsnzftXAUVSVfkFlM5bgzHeXW2Dwf
      3pgA4PieZvZvq6WjoQK3zYxBv7QNWZZXnrJiMBju2365tzRv/Yf/RG8oyXd///tYlBzV+iQ/
      PXsDi7eBI+0OTn58lfZDr1K8+S5DWQPV7bv5/Veff4iyNs99AyDl4ty6fpNPrg7x7DPNTMxb
      +b3vHr3rNaqqkk1GkfUOXFY9oZlpMpJCfVMLmcgsBZ2dGp+LaGga2eiiqsK1sjDWVgQgk8kQ
      i8Xw+/1MTExQXV2Ny7UxXbyqqnJ1OMS/e6uXQz31fP83n8FsvP9FVpKkldUXent7qaiooLW1
      dU0Tu7+4D6evBigpCi/tbUX36TKAqqqSSCSwWCwrVbqNmLQCUEjOMBzSs7OrekO29yjdNwCy
      lGVmKoj86b8d3iqqvHcvjaGUCkwM3CTjbGFHtYFP+gI01VfjMKgMTEcxSilq66sZm8ujKybZ
      sWc/9k+f3PGoAlAsFhkbG8Pj8aw0GJ1O54bfhLrQP82fvn2Jr+1t4Q9f3o1B/9UNZFVVWVxc
      ZHh4mFAohNfrZe/evZhMppVlvDfK56tTqqpSW1u7acMsnkSrqgL9t3//F+RMFhp6DvPqVw2G
      y4QZjOlo82j56PwFbN56GnxO9C4femmB4J0IvgN70M5MoPrrqPh0YaxIMMCV2xOcOH4cow6U
      Qpyfv/0OWaOfb792gv7zpxhZ0HPsQD2nTl4kq8Br3/tD6t33r1Is98un02kWFxfp7OxEo9Fs
      2iJciqJy+voE/+1kH9852sVrhzu/dGNoeY3L6elpLBYL2WwWi8VCc3PzQ8+iyqci9F78hG1H
      vkHVp+3Vc7/6G4Zmizz34kuY4iO8ffIGb/zhG8z3XSSwqOUb334Nt0ksRrZsFd+8HqvbRVNT
      K96q+y+PrjEaee7w10iHbjGfkDCoKWz5RRx+CwtzSYyZFNU6w8pZX2904LLrQWfEaARV6+DV
      N36fa+/+jPHgOElDC3/wvR4wGPgHbXv46NSvqfLaMOq/fAZLJpOEw2EaGhpIJBJUVFTQ2Ni4
      hkbdw1FVlZ+cHeTtjwb5g9/YzasH2u86+JeX5bt69SqKolBfX09DQ8OGVD9knYHmGgepkpEG
      I6hqgZyumm9/eyeFbJCLAZl/8b/9z8hShDuyj9/aLXEnXOJo28bNqX3SrSIAeUoaN11dXV+5
      PHpJTnP50gAZFWymPSRnhsnp3OzZ0cbE7ZukTD52tNcx0neVoq0Wp+WzIt2VlVgmPzsbaXQm
      +s/+lPG8gYNSnMFrAwRun+Ol7/0DGksjyN7t2PQaFEWhUChgMBgYHh7G7XbjdrtpbGzEYDDQ
      3Ny8Ed/NA0nFEn9zup+TV8b4R6/t4/ndjWj4rF4/Pj5OLpfj0KFD7N+/H7fb/VBr4dyL1e3D
      ZTUQlCSKRQ0jI0Nk5gP85K1RDr+wk5mpcf7iz/+UnuPfQE2N8dMLJU5898SGlP20WEUADKi5
      Od5//33qOvd9aV0gnd7OwROf+1L9n40W7di5d+V/d+1+7ktbnh4aovfSFWL42NvqQSsXSGjt
      OIvjpI37aW6cR6/JkS8UuXBrhq79+wiHw2g0GpLJJI2NjXR3d29JnbZQlPnLX1znk9sz/NM3
      DvFMRxWxaBS9Xk9vby8mk4nW1lZqa2s3ZflHVVWJTA7z81+fZUofpPHvvIDPX4evpRVzNEpW
      52dbixeDSSWXnCdVdNDkzzMbTtPlF1eAZataGOvDd06ykCtQ1fYML+zduMkZ0VCIxUwGvdnM
      9PAozx45yOJcCNXooL66gmR0nmRRR31NJdl0FrkkY7FY1rRo6mbI5ov8+d9eYSAQ5h99czfm
      0tL69WazmQMHDmAymTCZTJsyXXH55xocHMRh1lNUdagGM/HAIA0HTmBKL5AoQF1tNcVMnPnF
      LHV1NaRjcyTyGhrqq9GJRvCKVT8lspSZ5WTvAq++uHE3w56UoRCft5jK8f/88CMGRwL8T799
      CItWWjnb22y2TbsaybJMIpEgHA7T1ta25SeBp8Uqrs3LV4AsFc17H/zyTTIxF+eHp/s5truJ
      Qz31W1LtmQnO87//+x8RW1zkH/72MXZ2Nq77sT+rMTQ0hMvlwufzPZUD0rbSfQOQT89z+r1z
      LM3r1iDLxUeyU1/l/SvjfDIww42ROS4PzfJsZw1dDZV4HOZ79revlyzLxONxAoEAdwKzfDwu
      4fbV8n/9r39EhWvzzvaKopBKpZidnaW1tZWOjo4NbTwLn7lvAIwWD4eOHWWk/xqD4yHqHBtz
      5/BhfG1vC5FElnqfk2AkxQ9+dZNsoUhLtZsdrX52tVXRVuvB8hWrC6xVKpUC4MKFC0t/MHs4
      NVykrb6Kf/LGgQ1dmu+LAoEABoMBv9+/ZQ38cnLfNkA2Ps1//o9/hbdzF9vbG6nw19JQvXHz
      V9fSBljaSxVYGg+fLRSZmk9wbTjEjdE5QtE0ZqOersYKnu2sYWdrFV6HeVWTSmCp63J5HI4k
      SRw+fBiTycT4XIp/89Yltjf7+Iev7cW+wSuULS8qOzk5SVNTEzqdblPW+xG+2gPGAi1y7XIf
      0qf/9ta2saO9bsMK36hGsKrCQjzD7ckFbozMcWc6SiSepanKRU+rnz3tS/NU3fa7e2aKxSLz
      8/MAzM7Ooqoqra2t+Hw+AK4MBfl3P7nEoZ56/vi1vXc9XnMjhEIhZFmmsrJyQx85JKzeqnuB
      NsNm9AKpqkomXyQUTXNjdI4bI3MMT0dxWI201CzNw+2stRObmyIYDOLxeOju7sbn860cgKqq
      cu7WFP/x51d5eX8bv/O1HRuyFDcsfeZAIEBdXR2yLK97VQZhfZ66AHze8kfL5CUu3hzj5Lnr
      jEzMopq9mLQljj63iwM9jbTWevA4zGg1WhRV4d1PRvjrU338nRd38K3nuzakOhKPx0kmk3i9
      XoxGIwaDQVRzHgNPdQAkSUJRFD7++GMkSaKuro7augbSRQ39gQVujc0zNBVBq9HQXO2m3u9k
      PLjI5FyCv/fqHr6+r3Vdqx0oikIwGMTtdq88/VA8FPDx8tQFYHnC+tjYGNFolOeffx6dTofT
      6fxSV2JJUcgVZEZnYlwfCXH6WoBUVuLYnib+6RsHH/oMXSgUVtYDUhRlpWzh8ZO5VikAAAoZ
      SURBVPNUBEBRFKLRKIqiMD09TTKZpLW1lbq6ujX0MqncHJvno5uTfOtIF03Va3980OLiIkaj
      kVgsRkVFBVarWE34cffEBmB5CuHo6CiBQACj0Uh3dze1tbUb8sCG1VpeVVmv15NOp/H7/aKa
      8wR5ogKwPLspGAwSiURoaGggHA7T2tqKw+FYw0Ff4ta590m7Ojn86TpHC5MD/PLkeep3PU+r
      ZZH3P+mn+7mX6HJneOe9TzjwyhvsaPpsPkQ+n1+ZT+x0OsUQhSfUExOAUqnEuXPniMfj+P3+
      lf76h6tby4THh7idMHD8maXh3fHoAha7ldPvn+fo8SPo5QR/e/o6foOGvS8d58z7Z3n9m6+S
      z+eRZZn5+fmVVRqEJ9cTc63WarV0dnZSWVm5AfNm9fj9FdxOJFf+YjMb+Pjj8zxz+Hn08iJv
      //gUVdt3oqTSWI0m0KpMTEyg0WhobGyktbVVdGM+BZ6YAGg0GmpqajZoa1k++OV7XAxmqa70
      YtYUGT73C+b1fpTBISo1i9h9bgKT0+zyFvlX/+r/pmnnC49sppnw6DwxVaCNJTM/O48M6Mkw
      Ftaxq9VNIp1HZ7TgMGnouz2Mxe6kp6uVSCSO1+/HqBNn/KdNmQbgq0mSxMTEBJWVlSvzd4Wn
      mwgAMDc3RywWo6ura1MeLC08vtYdAFWRmR65TcnVRLPPylDfdZKqg7272hi6eZ283sOenmZu
      X7tC0eJnz/Y2dJ8OL9jKAMiyzOzsLDabDafTKcbmlKkNCUBibpKQ7KbBkWc6Al5NmAXJgd7h
      xJqfo1hQKXibMSxOUtm8DY9taUz9VgQgmUwyNzdHS0sLhUJhU+fxCo+/dfcCabR63C4HoRjI
      agm7xYXdnGN8tEBztQW9wU58LkpluxVtzoykyBSLSwdcqVTiUdTA1E+X/V5+akpdXd3Kg6aL
      xa2b5ilsvXUHQCnlGbszymRKi2dbM9NTA8zIMi3dXYzeuY1OkenoamTgyg20Gpln69swfG5s
      /WaPBp2fn6eqqgqtVrvyX0FYtiFVoFgkRgmwu7yoUhoZIy6HhUwyjqw147SbySQWUfRWHDbz
      pq4OraoqkiSRTqdRFAWj0bgpC+EKT4enphdIVVXi8Tg2m42pqSkaGhru8WgfQfjMEx+A5Unl
      qVSKUqlEdXW1qOYIq/bEDIX4vOVqjk6nY3h4mNraWvx+v6jmCGv2RF0Blg/8ZDJJPB6npaVF
      jL0X1uWJCYCqqgQCARwOBxUVFaKaI2yIJyYAgrAZxGlUKGsiAEJZEwEQypoIgFDWRACEsiYC
      IJQ1EQChrIkACGVNBEAoayIAQlkTARDKmgiAUNZEAISyJgIglLWNDYAiM3r7Flev3SAjqcyO
      DzE6HUZFZXp0gPGZBbZs7LUgfIUNnU6lFFIkFRPbuhpQEzPMF4yYkwFm5UXmJAeGRIBUhQen
      RcziEh4PG3oklhQtyfkA15IJGqp91Fb70Usagnci1B9oRTtTICtLWIpL14FHtTCWINzLhs4I
      k/IpkhmV3MIgi7IHxWjGmp/HbLOzUHJjzMzQ2LUHl3VpFpiYESZstQ1tAxgMZmKhUWJUsWNH
      O14SqK5GGtq2UaGEMVc24bSKA154fIg5wUJZE92gQlkTARDKmgiAUNZEAISyJgIglDURAKGs
      iQAIZU0EQChrIgBCWRMBEMqaCIBQ1kQAhLImAiCUNREAoayJAAhlTQRAKGuPJgBymo9Ov8+Z
      81eQSmIOsPD4eCQBiE9O0vTcC7T77SSzhUdRpCCsyiMJgIoGjQY0Gg2qWBlIeIw8kgC4G+oY
      u3iW4bkETov5URQpCKsiJsULZe2RB0BVVWRZBkBRFLRa0RElbJ0n6gqw1sAoioKqquh0uk0r
      Q5ZldDodGo1m08pY6/e0/JOuZZ8e5rfQaDSbXsZmniBVVd3YpRE326O4WjwNZazloHxYT8v3
      tKVXAFVVN/XHepgz4eNaxmYf1E9LGWule/PNN9/cqsLv/WVI9F26xO3hAPYKP4G+S/SPhKip
      9zFw9RJ3Juaorqnk1qVPGJ2NUFVdjV775W3d7xJdyES5cukq4zMRKr1WrvReJBQv4ndpOH/+
      ExbSCj67litX+zA6PdhMX33pvl8ZmViIy5evEYxm8FhVLlzoJS4ZcOqyXPjkMqmSEZMU4/K1
      m4RTMjV+L1+1pfsdNAvTI1y9cYt4QYcmE+LytZto7VUUoxP0XutDY3GTmBnkRt8dJL0dr8u6
      tjIUmZGBG/TdHkZj9RAJ9HFzcAKXr5rpocvcHJzCW12DSc1x+tR5attb7lmtuPfnKNJ/+TID
      w2PYvH4mBi7RPxykus7H4PVLDI6HqKqr5OrZs4wGF/D6qjAZVl+tBQgFBrl2c4BMyYSamuHy
      tVto7VVbewW4txL5fIns/BgLOityQktrRZL+iB2n3YDfnGZmVsJYU4OrGKVkq6Gu0rG2EuQi
      JQWmh/rJW8xUVjSRmx8imtXTsn0b4fHb1Ld0k47NobF5qfKsbfsAslRA1cDo0B3kokLzzp2M
      DtzCoYXKbbsY77/Fjh3b0aBye3CEHbt3srafFaRCAQ0lBoZG0agatu/ooq9/AIOqpaunnYGh
      aXZsayYZDTK1qGPP9qavDMA9qQoFSaaYiTETiZLNW9jeYGIsnkaK6djeomM46cJdDDE2Gee5
      l45gXeNnWP69c+EAYZ0ZKaahw5+mP2LDbtFRY88RThlIpEv0dNVjNplY64VEKuRBlRgcmYaS
      8un3dPNxHQukIx6eIKbx0ug1oTeYMFpMSHkJo8GA3mSimCtiMukx6I0oSmnNJWhQmQ4MY63v
      wKnXYDDoMRp05EsazHodOr0ONDqM+rUekp/RUmJ0dBR/Uwd6nRazXodWq0VRl7ar12golfKM
      Do/S0rV9zQc/gCpluDM2RWdXJxq9Hr1Oj0ZTQqMzoNPr0SoqpUKKQDCKxWxcewEaDZlYiOmY
      REdTFTqjCYPegCxL6AxmDCYjhfgctyfCyLk4kVjqIT6FjkR4kojqornC/OnvbV76vfUGDCYT
      imzApCa40ttLaDGz5hLkXIrhwBzbuto++54obW0V6J7kGO/9uhe5lMXkrGFu7BpDgTg7n+1m
      vO8qEzNxup/tZvjqFWZjKVrbOjAb1pbl2Mwgvf3TFLJJfD4ft65fIZYzsLvdy4Xeq2RlEzUu
      DRd6LzMTjFLb3IJpjUfoRP9lhoNxUuksjT4z5y/dQDG4aPIZ+OTyDVSzB2nuDoFIlky6QFWt
      b80huHXxQ+ZTBZJ5Baea4Hr/IM7qDmzFBa71D2P315IITrKYyiBrrNRXf3U1656KWT48e558
      IUfJ5CUXGuL2xBwNrT0kpm9we2yBlm1dVHmdpGIxfE1NOO5RXbwneZGT7y393gZHDeHANQbH
      F9nxbDcTt68xPh2jsbWBhdA0uYJCdV0DdvPayrh87jTxrES6qMVeWvz0e+ri/wdj0oxA45+h
      6wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Yearly Cost' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
